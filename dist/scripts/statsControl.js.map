{"version":3,"sources":["../../scripts/statsControl.js"],"names":["xhr","XMLHttpRequest","overrideMimeType","open","window","location","origin","onload","status","tableData","JSON","parse","responseText","data","personalStats","document","querySelector","statsTable","createPersonalTable","statsTableHeadings","querySelectorAll","placeholder","forEach","heading","i","addEventListener","event","preventDefault","direction","tableSort","replaceChild","send","listOfTypes","currentTable","tables","loadRatingTables","console","log","newTable","Number","value","parentElement","ratingPromise","makePromise","capacityPromise","speedPromise","Promise","all","then","resultArray","map","createGlobalTable","tableObj","type","url","resolve","Error","tableType","thead","createElement","tbody","table","className","innerHTML","row","line","number","name","appendChild","success","theme","speed","capacity","quantity","rating","column","tBodies","newTbody","tableRows","rows","sort","row1","row2","tableData1","cells","tableData2","getNumberOrString","numberOrString","isNaN","parseFloat"],"mappings":"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","file":"statsControl.js","sourcesContent":["let xhr = new XMLHttpRequest();\r\nxhr.overrideMimeType('application/json');\r\nxhr.open('GET', `${window.location.origin}/testData/statsTable.json`, true);\r\nxhr.onload = function () {\r\n    if (xhr.status === 200) {\r\n        let tableData = JSON.parse(xhr.responseText).data;\r\n        let personalStats = document.querySelector('.stats__personal');\r\n        let statsTable = createPersonalTable(tableData);\r\n        let statsTableHeadings = [...statsTable.querySelectorAll('.stats__heading')];\r\n        let placeholder = document.querySelector('.loading-placeholder');\r\n        statsTableHeadings.forEach((heading, i) => heading.addEventListener('click', function (event) {\r\n            event.preventDefault();\r\n            /* Тут мы задаем направление сортировки */\r\n            if (!this.direction) {\r\n                this.direction = 1;\r\n            } else {\r\n                this.direction = -this.direction;\r\n            }\r\n            tableSort(statsTable, i, -this.direction);\r\n        }));\r\n        personalStats.replaceChild(statsTable, placeholder);\r\n    }\r\n};\r\nxhr.send();\r\n\r\nlet listOfTypes = document.querySelector('.stats__global-type');\r\nlet currentTable = document.querySelectorAll('.loading-placeholder')[1];\r\nlet tables;\r\nloadRatingTables();\r\n\r\nlistOfTypes.addEventListener('change', function () {\r\n    console.log(currentTable);\r\n    let newTable = tables[Number(this.value)];\r\n    currentTable.parentElement.replaceChild(newTable, currentTable);\r\n    currentTable = newTable;\r\n});\r\n\r\nfunction loadRatingTables() {\r\n    let ratingPromise = makePromise(`${window.location.origin}/testData/ratingTop.json`);\r\n    let capacityPromise = makePromise(`${window.location.origin}/testData/capacityTop.json`);\r\n    let speedPromise = makePromise(`${window.location.origin}/testData/speedTop.json`);\r\n\r\n    Promise.all([ratingPromise, capacityPromise, speedPromise]).then(\r\n        function(resultArray) {\r\n            resultArray = resultArray.map(tableObj => createGlobalTable(tableObj.type, tableObj.data));\r\n            let newTable = resultArray[Number(listOfTypes.value)];\r\n            currentTable.parentElement.replaceChild(newTable, currentTable);\r\n            currentTable = newTable;\r\n            tables = resultArray;\r\n        }\r\n    );\r\n}\r\n\r\nfunction makePromise(url) {\r\n    return new Promise(function (resolve) {\r\n        let xhr = new XMLHttpRequest();\r\n        xhr.overrideMimeType('application/json');\r\n        xhr.open('GET', url, true);\r\n        xhr.onload = function () {\r\n            if (xhr.status === 200) {\r\n                resolve(JSON.parse(xhr.responseText));\r\n            }\r\n            else {\r\n                throw new Error();\r\n            }\r\n        };\r\n        xhr.send();\r\n    })\r\n}\r\n\r\nfunction createGlobalTable(tableType, tableData) {\r\n    let thead = document.createElement('thead');\r\n    let tbody = document.createElement('tbody');\r\n    let table = document.createElement('table');\r\n    table.className = 'stats__table table_light-theme';\r\n    thead.innerHTML = '<tr class=\"stats__row\"><th class=\"stats__data table_light-theme\">№</th>\\n' +\r\n        '<th class=\"stats__data table_light-theme\">Имя</th>\\n' +\r\n        `<th class=\"stats__data table_light-theme\">${tableType}</th>\\n`;\r\n    tableData.forEach(line => {\r\n        let row = document.createElement('tr');\r\n        row.innerHTML = `<td class=\"stats__data table_light-theme\">${line.number}</td>\r\n            <td class=\"stats__data table_light-theme\">${line.name}</td>\r\n            <td class=\"stats__data table_light-theme\">${line.value}</td>`;\r\n        tbody.appendChild(row);\r\n    });\r\n    table.appendChild(thead);\r\n    table.appendChild(tbody);\r\n\r\n    return table;\r\n}\r\n\r\nfunction createPersonalTable(tableData) {\r\n    let thead = document.createElement('thead');\r\n    let tbody = document.createElement('tbody');\r\n    let table = document.createElement('table');\r\n    table.className = 'stats__table table_light-theme';\r\n    thead.innerHTML = '<tr class=\"stats__row\"><th class=\"stats__heading table_light-theme\">№</th>\\n' +\r\n        '<th class=\"stats__heading table_light-theme\">Результат</th>\\n' +\r\n        '<th class=\"stats__heading table_light-theme\">Тема</th>\\n' +\r\n        '<th class=\"stats__heading table_light-theme\">Скорость</th>\\n' +\r\n        '<th class=\"stats__heading table_light-theme\">Разрядность</th>\\n' +\r\n        '<th class=\"stats__heading table_light-theme\">Количество</th>' +\r\n        '<th class=\"stats__heading table_light-theme\">Тип рейтинга</th>' +\r\n        '</tr>';\r\n    tableData.forEach((line, number) => {\r\n        let row = document.createElement('tr');\r\n        row.innerHTML = `<td class=\"stats__data table_light-theme\">${number + 1}</td>\r\n            <td class=\"stats__data table_light-theme ${line.success ? 'success' : 'failure'}\">${line.success ? 'Успех' : 'Неудача'}</td>\r\n            <td class=\"stats__data table_light-theme\">${line.theme}</td>\r\n            <td class=\"stats__data table_light-theme\">${line.speed + 'сек'}</td>\r\n            <td class=\"stats__data table_light-theme\">${line.capacity}</td>\r\n            <td class=\"stats__data table_light-theme\">${line.quantity}</td>\r\n            <td class=\"stats__data table_light-theme\">${line.rating}</td>`;\r\n        tbody.appendChild(row);\r\n    });\r\n    table.appendChild(thead);\r\n    table.appendChild(tbody);\r\n\r\n    return table;\r\n}\r\n\r\n/**\r\n * Сортирует заданную таблицу по столбцу с заданным номером\r\n * @param {Object} table\r\n * @param {Number} column\r\n * @param {Number} direction - -1 по убыванию, 1 по возрастанию\r\n * @returns {Object} - измененная таблица\r\n */\r\nfunction tableSort(table, column, direction) {\r\n    let tbody = table.tBodies[0];\r\n    let newTbody = document.createElement('tbody');\r\n    let tableRows = [...tbody.rows];\r\n\r\n    tableRows.sort(function (row1, row2) {\r\n        let tableData1 = row1.cells[column];\r\n        let tableData2 = row2.cells[column];\r\n\r\n        if (getNumberOrString(tableData1.innerHTML) > getNumberOrString(tableData2.innerHTML)) {\r\n            return direction;\r\n        }\r\n        if (getNumberOrString(tableData1.innerHTML) < getNumberOrString(tableData2.innerHTML)) {\r\n            return -direction;\r\n        }\r\n\r\n        return 0;\r\n    });\r\n    tableRows.forEach(row => newTbody.appendChild(row));\r\n    table.replaceChild(newTbody, tbody);\r\n\r\n    return table;\r\n}\r\n\r\n/**\r\n * Если строка приводится к числу или начинается с числа возвращает это число, иначе саму строку\r\n * @param numberOrString\r\n * @return {*}\r\n */\r\nfunction getNumberOrString(numberOrString) {\r\n    if (!isNaN(Number(numberOrString))) {\r\n        return Number(numberOrString);\r\n    }\r\n    if (!isNaN(parseFloat(numberOrString))) {\r\n        return parseFloat(numberOrString);\r\n    }\r\n\r\n    return numberOrString;\r\n}\r\n"]}