{"version":3,"sources":["../../scripts/statsControl.js"],"names":["document","body","classList","contains","loadRatingTables","ratingPromise","makePromiseToGetData","window","location","origin","capacityPromise","speedPromise","Promise","all","then","resultArray","map","createGlobalTable","tableObj","type","data","newTable","Number","listOfTypes","value","currentTable","parentElement","replaceChild","tables","catch","notify","error","message","url","resolve","reject","xhr","XMLHttpRequest","overrideMimeType","open","onload","status","JSON","parse","responseText","Error","onerror","send","tableType","tableData","thead","createElement","tbody","table","className","innerHTML","forEach","row","line","number","name","appendChild","createPersonalTable","success","theme","speed","capacity","quantity","rating","tableSort","column","direction","tBodies","newTbody","tableRows","rows","sort","row1","row2","tableData1","cells","tableData2","getNumberOrString","numberOrString","isNaN","parseFloat","setRequestHeader","personalStats","querySelector","statsTable","statsTableHeadings","querySelectorAll","placeholder","heading","i","addEventListener","event","preventDefault","bgColors","failure","warning","colors","isFixed","element","TypeError","messageWindow","title","notifyStyles","left","right","top","padding","textAlign","border","zIndex","backgroundColor","color","cursor","position","Object","assign","style","delayedRemoval","setTimeout","removeChild","clearTimeout","insertBefore","firstElementChild"],"mappings":"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","file":"statsControl.js","sourcesContent":["if (document.body.classList.contains('stats-body')) {\r\n    let xhr = new XMLHttpRequest();\r\n    xhr.open('GET', `${window.location.origin}/testData/statsTable.json`, true);\r\n    xhr.setRequestHeader('Content-Type', 'application/json');\r\n    \r\n    xhr.onload = function () {\r\n        if (xhr.status === 200) {\r\n            let tableData = JSON.parse(xhr.responseText).data;\r\n            let personalStats = document.querySelector('.stats__personal');\r\n            let statsTable = createPersonalTable(tableData);\r\n            let statsTableHeadings = [...statsTable.querySelectorAll('.stats__heading')];\r\n            let placeholder = document.querySelector('.loading-placeholder');\r\n\r\n            statsTableHeadings.forEach((heading, i) => heading.addEventListener('click', function (event) {\r\n                event.preventDefault();\r\n                /* Тут мы задаем направление сортировки */\r\n                if (!this.direction) {\r\n                    this.direction = 1;\r\n                } else {\r\n                    this.direction = -this.direction;\r\n                }\r\n                tableSort(statsTable, i, -this.direction);\r\n            }));\r\n            personalStats.replaceChild(statsTable, placeholder);\r\n        } else {\r\n            throw new Error(`Ошибка при загрузке статистики (${xhr.status})`);\r\n        }\r\n    };\r\n    xhr.onerror = function () {\r\n        throw new Error(`Ошибка при загрузке статистики (${xhr.status})`);\r\n    };\r\n\r\n    xhr.send();\r\n\r\n    let listOfTypes = document.querySelector('.stats__global-type');\r\n    let currentTable = document.querySelectorAll('.loading-placeholder')[1];\r\n    let tables;\r\n\r\n    loadRatingTables();\r\n\r\n    listOfTypes.addEventListener('change', function () {\r\n        let newTable = tables[Number(this.value)];\r\n        currentTable.parentElement.replaceChild(newTable, currentTable);\r\n        currentTable = newTable;\r\n    });\r\n\r\n    function loadRatingTables() {\r\n        let ratingPromise = makePromiseToGetData(`${window.location.origin}/testData/ratingTop.json`);\r\n        let capacityPromise = makePromiseToGetData(`${window.location.origin}/testData/capacityTop.json`);\r\n        let speedPromise = makePromiseToGetData(`${window.location.origin}/testData/speedTop.json`);\r\n\r\n        Promise.all([ratingPromise, capacityPromise, speedPromise]).then(\r\n            function (resultArray) {\r\n                resultArray = resultArray.map(tableObj => createGlobalTable(tableObj.type, tableObj.data));\r\n                let newTable = resultArray[Number(listOfTypes.value)];\r\n                currentTable.parentElement.replaceChild(newTable, currentTable);\r\n                currentTable = newTable;\r\n                tables = resultArray;\r\n            }\r\n        ).catch(error => notify(true, error.message, 'failure'));\r\n    }\r\n\r\n    function makePromiseToGetData(url) {\r\n        return new Promise(function (resolve, reject) {\r\n            let xhr = new XMLHttpRequest();\r\n            xhr.overrideMimeType('application/json');\r\n            xhr.open('GET', url, true);\r\n            xhr.onload = function () {\r\n                if (xhr.status === 200) {\r\n                    resolve(JSON.parse(xhr.responseText));\r\n                } else {\r\n                    reject(new Error(`Произошла ошибка при загрузке рейтинга (${xhr.status})`));\r\n                }\r\n            };\r\n            xhr.onerror = function () {\r\n                reject(new Error(`Произошла ошибка при загрузке рейтинга (${xhr.status})`));\r\n            };\r\n            xhr.send();\r\n        })\r\n    }\r\n\r\n    function createGlobalTable(tableType, tableData) {\r\n        let thead = document.createElement('thead');\r\n        let tbody = document.createElement('tbody');\r\n        let table = document.createElement('table');\r\n        table.className = 'stats__table table_light-theme';\r\n        thead.innerHTML = '<tr class=\"stats__row\"><th class=\"stats__data table_light-theme\">№</th>\\n' +\r\n            '<th class=\"stats__data table_light-theme\">Имя</th>\\n' +\r\n            `<th class=\"stats__data table_light-theme\">${tableType}</th>\\n`;\r\n        tableData.forEach(line => {\r\n            let row = document.createElement('tr');\r\n            row.innerHTML = `<td class=\"stats__data table_light-theme\">${line.number}</td>\r\n            <td class=\"stats__data table_light-theme\">${line.name}</td>\r\n            <td class=\"stats__data table_light-theme\">${line.value}</td>`;\r\n            tbody.appendChild(row);\r\n        });\r\n        table.appendChild(thead);\r\n        table.appendChild(tbody);\r\n\r\n        return table;\r\n    }\r\n\r\n    function createPersonalTable(tableData) {\r\n        let thead = document.createElement('thead');\r\n        let tbody = document.createElement('tbody');\r\n        let table = document.createElement('table');\r\n        table.className = 'stats__table table_light-theme';\r\n        thead.innerHTML = '<tr class=\"stats__row\"><th class=\"stats__heading table_light-theme\">№</th>\\n' +\r\n            '<th class=\"stats__heading table_light-theme\">Результат</th>\\n' +\r\n            '<th class=\"stats__heading table_light-theme\">Тема</th>\\n' +\r\n            '<th class=\"stats__heading table_light-theme\">Скорость</th>\\n' +\r\n            '<th class=\"stats__heading table_light-theme\">Разрядность</th>\\n' +\r\n            '<th class=\"stats__heading table_light-theme\">Количество</th>' +\r\n            '<th class=\"stats__heading table_light-theme\">Тип рейтинга</th>' +\r\n            '</tr>';\r\n        tableData.forEach((line, number) => {\r\n            let row = document.createElement('tr');\r\n            row.innerHTML = `<td class=\"stats__data table_light-theme\">${number + 1}</td>\r\n            <td class=\"stats__data table_light-theme ${line.success ? 'success' : 'failure'}\">${line.success ? 'Успех' : 'Неудача'}</td>\r\n            <td class=\"stats__data table_light-theme\">${line.theme}</td>\r\n            <td class=\"stats__data table_light-theme\">${line.speed + 'сек'}</td>\r\n            <td class=\"stats__data table_light-theme\">${line.capacity}</td>\r\n            <td class=\"stats__data table_light-theme\">${line.quantity}</td>\r\n            <td class=\"stats__data table_light-theme\">${line.rating}</td>`;\r\n            tbody.appendChild(row);\r\n        });\r\n        table.appendChild(thead);\r\n        table.appendChild(tbody);\r\n\r\n        return table;\r\n    }\r\n\r\n    /**\r\n     * Сортирует заданную таблицу по столбцу с заданным номером\r\n     * @param {Object} table\r\n     * @param {Number} column\r\n     * @param {Number} direction - -1 по убыванию, 1 по возрастанию\r\n     * @returns {Object} - измененная таблица\r\n     */\r\n    function tableSort(table, column, direction) {\r\n        let tbody = table.tBodies[0];\r\n        let newTbody = document.createElement('tbody');\r\n        let tableRows = [...tbody.rows];\r\n\r\n        tableRows.sort(function (row1, row2) {\r\n            let tableData1 = row1.cells[column];\r\n            let tableData2 = row2.cells[column];\r\n\r\n            if (getNumberOrString(tableData1.innerHTML) > getNumberOrString(tableData2.innerHTML)) {\r\n                return direction;\r\n            }\r\n            if (getNumberOrString(tableData1.innerHTML) < getNumberOrString(tableData2.innerHTML)) {\r\n                return -direction;\r\n            }\r\n\r\n            return 0;\r\n        });\r\n        tableRows.forEach(row => newTbody.appendChild(row));\r\n        table.replaceChild(newTbody, tbody);\r\n\r\n        return table;\r\n    }\r\n\r\n    /**\r\n     * Если строка приводится к числу или начинается с числа возвращает это число, иначе саму строку\r\n     * @param numberOrString\r\n     * @return {*}\r\n     */\r\n    function getNumberOrString(numberOrString) {\r\n        if (!isNaN(Number(numberOrString))) {\r\n            return Number(numberOrString);\r\n        }\r\n        if (!isNaN(parseFloat(numberOrString))) {\r\n            return parseFloat(numberOrString);\r\n        }\r\n\r\n        return numberOrString;\r\n    }\r\n}\r\n\r\nlet bgColors = {\r\n    success: '#6eff95',\r\n    failure: '#ff0000',\r\n    warning: '#fcff5a'\r\n};\r\nlet colors = {\r\n    success: '#00a919',\r\n    failure: '#850000',\r\n    warning: '#de8004'\r\n};\r\n\r\n/**\r\n * Выводит уведомление, позиционированное сверху экрана и фиксированное при необходимости, в указанный элемент\r\n * @param {Boolean} isFixed\r\n * @param {String} message\r\n * @param {String} type\r\n * @param {HTMLElement} element\r\n */\r\nfunction notify(isFixed, message, type, element = document.body) {\r\n    if (type !== 'success' && type !== 'failure' && type !== 'warning') {\r\n        throw new TypeError('Неверное имя типа. Принимаются только \"success\", \"warning\" или \"failure\"');\r\n    }\r\n    let messageWindow = document.createElement('div');\r\n    messageWindow.title = 'Скрыть';\r\n    messageWindow.innerHTML = message;\r\n\r\n    let notifyStyles = {\r\n        left: '0',\r\n        right: '0',\r\n        top: '0',\r\n        padding: '10px',\r\n        textAlign: 'center',\r\n        border: '2px solid',\r\n        zIndex: '20',\r\n        backgroundColor: bgColors[type],\r\n        color: colors[type],\r\n        cursor: 'pointer',\r\n        position: isFixed ? 'fixed' : 'absolute'\r\n    };\r\n    Object.assign(messageWindow.style, notifyStyles);\r\n\r\n    let delayedRemoval = setTimeout(function () {\r\n        element.removeChild(messageWindow);\r\n    }, 5000);\r\n\r\n    messageWindow.addEventListener('click', function (event) {\r\n        event.preventDefault();\r\n        element.removeChild(messageWindow);\r\n        clearTimeout(delayedRemoval);\r\n    });\r\n\r\n    element.insertBefore(messageWindow, element.firstElementChild);\r\n}"]}