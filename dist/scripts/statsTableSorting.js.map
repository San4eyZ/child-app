{"version":3,"sources":["../../scripts/statsTableSorting.js"],"names":["statsTable","document","querySelector","statsTableHeadings","querySelectorAll","forEach","heading","i","addEventListener","event","preventDefault","direction","tableSort","table","column","tbody","tBodies","newTbody","createElement","tableRows","rows","sort","row1","row2","tableData1","cells","tableData2","getNumberOrString","innerHTML","appendChild","row","replaceChild","numberOrString","isNaN","Number","parseFloat"],"mappings":";;;;AAAA,IAAIA,aAAaC,SAASC,aAAT,CAAuB,eAAvB,CAAjB;AACA,IAAIC,kDAAyBH,WAAWI,gBAAX,CAA4B,UAA5B,CAAzB,EAAJ;;AAEAD,mBAAmBE,OAAnB,CAA2B,UAACC,OAAD,EAAUC,CAAV;AAAA,WAAgBD,QAAQE,gBAAR,CAAyB,OAAzB,EAAkC,UAAUC,KAAV,EAAiB;AAC1FA,cAAMC,cAAN;AACA;AACA,YAAI,CAAC,KAAKC,SAAV,EAAqB;AACjB,iBAAKA,SAAL,GAAiB,CAAC,CAAlB;AACH,SAFD,MAEO;AACH,iBAAKA,SAAL,GAAiB,CAAC,KAAKA,SAAvB;AACH;AACDC,kBAAUZ,UAAV,EAAsBO,CAAtB,EAAyB,CAAC,KAAKI,SAA/B;AACH,KAT0C,CAAhB;AAAA,CAA3B;;AAWA;;;;;;;AAOA,SAASC,SAAT,CAAmBC,KAAnB,EAA0BC,MAA1B,EAAkCH,SAAlC,EAA6C;AACzC,QAAII,QAAQF,MAAMG,OAAN,CAAc,CAAd,CAAZ;AACA,QAAIC,WAAWhB,SAASiB,aAAT,CAAuB,OAAvB,CAAf;AACA,QAAIC,yCAAgBJ,MAAMK,IAAtB,EAAJ;;AAEAD,cAAUE,IAAV,CAAe,UAAUC,IAAV,EAAgBC,IAAhB,EAAsB;AACjC,YAAIC,aAAaF,KAAKG,KAAL,CAAWX,MAAX,CAAjB;AACA,YAAIY,aAAaH,KAAKE,KAAL,CAAWX,MAAX,CAAjB;;AAEA,YAAIa,kBAAkBH,WAAWI,SAA7B,IAA0CD,kBAAkBD,WAAWE,SAA7B,CAA9C,EAAuF;AACnF,mBAAOjB,SAAP;AACH;AACD,YAAIgB,kBAAkBH,WAAWI,SAA7B,IAA0CD,kBAAkBD,WAAWE,SAA7B,CAA9C,EAAuF;AACnF,mBAAO,CAACjB,SAAR;AACH;;AAED,eAAO,CAAP;AACH,KAZD;AAaAQ,cAAUd,OAAV,CAAkB;AAAA,eAAOY,SAASY,WAAT,CAAqBC,GAArB,CAAP;AAAA,KAAlB;AACAjB,UAAMkB,YAAN,CAAmBd,QAAnB,EAA6BF,KAA7B;;AAEA,WAAOF,KAAP;AACH;;AAED;;;;;AAKA,SAASc,iBAAT,CAA2BK,cAA3B,EAA2C;AACvC,QAAI,CAACC,MAAMC,OAAOF,cAAP,CAAN,CAAL,EAAoC;AAChC,eAAOE,OAAOF,cAAP,CAAP;AACH;AACD,QAAI,CAACC,MAAME,WAAWH,cAAX,CAAN,CAAL,EAAwC;AACpC,eAAOG,WAAWH,cAAX,CAAP;AACH;;AAED,WAAOA,cAAP;AACH","file":"statsTableSorting.js","sourcesContent":["let statsTable = document.querySelector('.stats__table');\r\nlet statsTableHeadings = [...statsTable.querySelectorAll('thead th')];\r\n\r\nstatsTableHeadings.forEach((heading, i) => heading.addEventListener('click', function (event) {\r\n    event.preventDefault();\r\n    /* Тут мы задаем направление сортировки */\r\n    if (!this.direction) {\r\n        this.direction = -1;\r\n    } else {\r\n        this.direction = -this.direction;\r\n    }\r\n    tableSort(statsTable, i, -this.direction);\r\n}));\r\n\r\n/**\r\n * Сортирует заданную таблицу по столбцу с заданным номером\r\n * @param {Object} table\r\n * @param {Number} column\r\n * @param {Number} direction - -1 по убыванию, 1 по возрастанию\r\n * @returns {Object} - измененная таблица\r\n */\r\nfunction tableSort(table, column, direction) {\r\n    let tbody = table.tBodies[0];\r\n    let newTbody = document.createElement('tbody');\r\n    let tableRows = [...tbody.rows];\r\n\r\n    tableRows.sort(function (row1, row2) {\r\n        let tableData1 = row1.cells[column];\r\n        let tableData2 = row2.cells[column];\r\n\r\n        if (getNumberOrString(tableData1.innerHTML) > getNumberOrString(tableData2.innerHTML)) {\r\n            return direction;\r\n        }\r\n        if (getNumberOrString(tableData1.innerHTML) < getNumberOrString(tableData2.innerHTML)) {\r\n            return -direction;\r\n        }\r\n\r\n        return 0;\r\n    });\r\n    tableRows.forEach(row => newTbody.appendChild(row));\r\n    table.replaceChild(newTbody, tbody);\r\n\r\n    return table;\r\n}\r\n\r\n/**\r\n * Если строка приводится к числу или начинается с числа возвращает это число, иначе саму строку\r\n * @param numberOrString\r\n * @return {*}\r\n */\r\nfunction getNumberOrString(numberOrString) {\r\n    if (!isNaN(Number(numberOrString))) {\r\n        return Number(numberOrString);\r\n    }\r\n    if (!isNaN(parseFloat(numberOrString))) {\r\n        return parseFloat(numberOrString);\r\n    }\r\n\r\n    return numberOrString;\r\n}\r\n"]}